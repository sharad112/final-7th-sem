{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n// const initialState = {\n//   loading: false,\n//   userData: [],\n//   error: \"\",\n// };\n\n// const userSlice = createSlice({\n//   name: \"user\",\n//   initialState,\n//   reducers: {\n//     fetchUserRequest: (state) => {\n//       state.loading = true;\n//     },\n//     fetchUserRequestSuccees: (state, action) => {\n//       state.loading = false;\n//       state.userData = action.payload;\n//       state.error = \"\";\n//     },\n//     fetchUserRequestFailure: (state, action) => {\n//       state.loading = false;\n//       state.error = action.payload;\n//     },\n//   },\n// });\n// export const {\n//   fetchUserRequest,\n//   fetchUserRequestSuccees,\n//   fetchUserRequestFailure,\n// } = userSlice.actions;\n// export default userSlice.reducer;\n\nconst initialState = {\n  userData: [],\n  isLoading: false,\n  error: \"\"\n};\nconsole.log(initialState);\nexport const fetchUsers = createAsyncThunk(\"user/fetchUser\", async () => {\n  const response = await axios.get(\"\");\n  return response.data;\n});\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setUserdata: (state, action) => {\n      state.userData = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchUsers.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.userData = action.payload;\n      state.error = \"\";\n    });\n    builder.addCase(fetchUsers.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  setUserdata\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","userData","isLoading","error","console","log","fetchUsers","response","get","data","userSlice","name","reducers","setUserdata","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["E:/7th sem/final-7th-sem/src/comps/redux/user/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n// const initialState = {\r\n//   loading: false,\r\n//   userData: [],\r\n//   error: \"\",\r\n// };\r\n\r\n// const userSlice = createSlice({\r\n//   name: \"user\",\r\n//   initialState,\r\n//   reducers: {\r\n//     fetchUserRequest: (state) => {\r\n//       state.loading = true;\r\n//     },\r\n//     fetchUserRequestSuccees: (state, action) => {\r\n//       state.loading = false;\r\n//       state.userData = action.payload;\r\n//       state.error = \"\";\r\n//     },\r\n//     fetchUserRequestFailure: (state, action) => {\r\n//       state.loading = false;\r\n//       state.error = action.payload;\r\n//     },\r\n//   },\r\n// });\r\n// export const {\r\n//   fetchUserRequest,\r\n//   fetchUserRequestSuccees,\r\n//   fetchUserRequestFailure,\r\n// } = userSlice.actions;\r\n// export default userSlice.reducer;\r\n\r\nconst initialState = {\r\n  userData: [],\r\n  isLoading: false,\r\n  error: \"\",\r\n};\r\nconsole.log(initialState);\r\nexport const fetchUsers = createAsyncThunk(\"user/fetchUser\", async () => {\r\n  const response = await axios.get(\"\");\r\n  return response.data;\r\n});\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    setUserdata:(state,action)=>\r\n    {\r\n      state.userData=action.payload;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchUsers.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(fetchUsers.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.userData = action.payload;\r\n      state.error = \"\";\r\n    });\r\n    builder.addCase(fetchUsers.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { setUserdata } =userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AACDC,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;AACzB,OAAO,MAAMM,UAAU,GAAGT,gBAAgB,CAAC,gBAAgB,EAAE,YAAY;EACvE,MAAMU,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,EAAE,CAAC;EACpC,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,MAAM;EACZX,YAAY;EACZY,QAAQ,EAAE;IACRC,WAAW,EAACA,CAACC,KAAK,EAACC,MAAM,KACzB;MACED,KAAK,CAACb,QAAQ,GAACc,MAAM,CAACC,OAAO;IAC/B;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACb,UAAU,CAACc,OAAO,EAAGN,KAAK,IAAK;MAC7CA,KAAK,CAACZ,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC;IACFgB,OAAO,CAACC,OAAO,CAACb,UAAU,CAACe,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACZ,SAAS,GAAG,KAAK;MACvBY,KAAK,CAACb,QAAQ,GAAGc,MAAM,CAACC,OAAO;MAC/BF,KAAK,CAACX,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC;IACFe,OAAO,CAACC,OAAO,CAACb,UAAU,CAACgB,QAAQ,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACZ,SAAS,GAAG,KAAK;MACvBY,KAAK,CAACX,KAAK,GAAGY,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAY,CAAC,GAAEH,SAAS,CAACa,OAAO;AAE/C,eAAeb,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}